{"ast":null,"code":"var _jsxFileName = \"/Users/anuragmishra/Documents/Development/ML_Resources/RA/src/components/PartsSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Box, TextField, InputAdornment, IconButton, Paper, Typography, CircularProgress, Alert, Grid, Card, CardContent, Chip, Button, Autocomplete, Tooltip, LinearProgress, CardMedia, Dialog, DialogContent, DialogTitle } from '@mui/material';\nimport { Search as SearchIcon, Clear as ClearIcon, Build as BuildIcon, AttachMoney as MoneyIcon, Inventory as InventoryIcon, Cached as CachedIcon, Info as InfoIcon, Download as DownloadIcon, Image as ImageIcon, ZoomIn as ZoomInIcon, Close as CloseIcon } from '@mui/icons-material';\nimport { MANUFACTURER_CODES, getManufacturerCode } from '../data/manufacturerCodes';\nimport vandvIplApi from '../services/vandvIplApi';\nimport { loadSamplePartsIntoCache } from '../data/samplePartsData';\nimport partsCache from '../services/partsCache';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PartsSearch = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedManufacturer, setSelectedManufacturer] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [cacheStats, setCacheStats] = useState(null);\n  const [diagrams, setDiagrams] = useState([]);\n  const [selectedDiagram, setSelectedDiagram] = useState(null);\n  const [zoomedImage, setZoomedImage] = useState(null);\n\n  // Convert manufacturer codes to options for autocomplete\n  const manufacturerOptions = Object.entries(MANUFACTURER_CODES).map(([code, name]) => ({\n    code,\n    name,\n    label: `${name} (${code})`\n  }));\n\n  // Load cache stats on mount\n  useEffect(() => {\n    updateCacheStats();\n  }, []);\n  const updateCacheStats = () => {\n    const stats = vandvIplApi.getCacheStats();\n    setCacheStats(stats);\n  };\n  const handleSearch = useCallback(async () => {\n    if (!searchQuery.trim()) {\n      setError('Please enter a part number or description');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setSearchResults([]);\n    try {\n      // Search using the IPL API with cache\n      const results = await vandvIplApi.searchParts(searchQuery, (selectedManufacturer === null || selectedManufacturer === void 0 ? void 0 : selectedManufacturer.code) || null);\n      setSearchResults(results);\n      updateCacheStats(); // Update stats after search\n\n      if (results.length === 0) {\n        // Check if it might be a model number without modelId\n        if (searchQuery.match(/^[A-Z0-9]{6,}$/)) {\n          setError(`\"${searchQuery}\" looks like a model number. To search for parts:\\n` + `1. First, search for this model in the \"Appliances\" tab\\n` + `2. Click \"View Diagrams\" to load its parts\\n` + `3. Then search for specific part numbers or descriptions here\\n\\n` + `Or click \"Load Sample Data\" above to try the search feature.`);\n        } else {\n          setError(`No parts found matching \"${searchQuery}\"`);\n        }\n      }\n    } catch (err) {\n      console.error('Parts search error:', err);\n      setError('Failed to search parts. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [searchQuery, selectedManufacturer]);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSearchResults([]);\n    setError(null);\n  };\n  const formatPrice = price => {\n    return `$${price.toFixed(2)}`;\n  };\n  const getStockStatus = quantity => {\n    if (quantity > 10) return {\n      label: 'In Stock',\n      color: 'success'\n    };\n    if (quantity > 0) return {\n      label: `Only ${quantity} left`,\n      color: 'warning'\n    };\n    return {\n      label: 'Out of Stock',\n      color: 'error'\n    };\n  };\n\n  // Load sample data for testing\n  const loadSampleData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Loading sample data...');\n\n      // Show a message that this might take time\n      setError('⏳ Connecting to V&V API... This may take up to 30 seconds. Please wait...');\n\n      // First, ensure we have the model ID mapping\n      vandvIplApi.addModelIdMapping('MAV6000AWQ', '87048');\n\n      // Try to fetch diagrams first\n      console.log('Fetching diagrams for MAV6000AWQ...');\n      const diagramsData = await vandvIplApi.getDiagrams('MAV6000AWQ', '87048');\n      if (diagramsData.length === 0) {\n        throw new Error('No diagrams found');\n      }\n      console.log(`Found ${diagramsData.length} diagrams`);\n      setDiagrams(diagramsData);\n      setSelectedDiagram(diagramsData[0]);\n      setError('⏳ Loading parts data... Almost done...');\n\n      // Fetch parts for the first diagram\n      const firstDiagram = diagramsData[0];\n      console.log(`Fetching parts for diagram ${firstDiagram.diagramId}...`);\n      const parts = await vandvIplApi.getDiagramParts('MAV6000AWQ', '87048', firstDiagram.diagramId);\n      const partsCount = Object.keys(parts).length;\n      console.log(`Loaded ${partsCount} parts`);\n      updateCacheStats();\n      if (partsCount > 0) {\n        // Show some example parts\n        const exampleParts = Object.keys(parts).slice(0, 3).join(', ');\n        setError(null);\n        alert(`✅ Sample data loaded!\\n\\nLoaded ${partsCount} parts from MAV6000AWQ.\\n\\nTry searching for:\\n- Part numbers: ${exampleParts}\\n- Descriptions: \"seal\", \"kit\", \"basket\"`);\n      } else {\n        throw new Error('No parts found in the diagram');\n      }\n    } catch (err) {\n      console.error('Error loading from API:', err);\n\n      // Check if it's a timeout\n      if (err.code === 'ECONNABORTED' || err.message.includes('timeout')) {\n        console.log('API timeout - loading pre-fetched data instead');\n      }\n\n      // Fallback: Load pre-fetched sample data\n      console.log('Loading pre-fetched sample data as fallback...');\n      const partsCount = loadSamplePartsIntoCache(partsCache);\n      updateCacheStats();\n\n      // Add sample diagram data\n      const sampleDiagrams = [{\n        sectionName: \"01 - Base\",\n        diagramId: 525454,\n        diagramSmallImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036567/125/150\",\n        diagramLargeImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036567/680/900\"\n      }, {\n        sectionName: \"02 - Cabinet\",\n        diagramId: 525456,\n        diagramSmallImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036568/125/150\",\n        diagramLargeImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036568/680/900\"\n      }];\n      setDiagrams(sampleDiagrams);\n      setSelectedDiagram(sampleDiagrams[0]);\n      setError(null);\n      alert(`✅ Sample data loaded (from cache)!\\n\\n` + `Loaded ${partsCount} parts for MAV6000AWQ.\\n\\n` + `Try searching for:\\n` + `- Part numbers: 200961, W10820039, WP22003813\\n` + `- Descriptions: \"seal\", \"motor\", \"spring\", \"kit\"`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const showNotification = (message, severity) => {\n    // You can implement a snackbar here if needed\n    if (severity === 'success') {\n      console.log('✅', message);\n    } else {\n      console.log('❌', message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 1200,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: diagrams.length > 0 ? 7 : 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            borderRadius: 2,\n            backgroundColor: 'rgba(255, 255, 255, 0.9)',\n            backdropFilter: 'blur(10px)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(BuildIcon, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), \"Search Appliance Parts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), cacheStats && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1,\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(CachedIcon, {\n                fontSize: \"small\",\n                color: \"action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: [\"Cache: \", cacheStats.totalParts, \" parts from \", cacheStats.totalModels, \" models\", cacheStats.lastUpdated && ` • Updated ${new Date(cacheStats.lastUpdated).toLocaleTimeString()}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this), cacheStats.totalParts === 0 && /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 52\n              }, this),\n              onClick: loadSampleData,\n              disabled: loading,\n              children: \"Load Sample Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                value: selectedManufacturer,\n                onChange: (event, newValue) => setSelectedManufacturer(newValue),\n                options: manufacturerOptions,\n                getOptionLabel: option => option.label,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: \"Manufacturer (Optional)\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  placeholder: \"All manufacturers...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                variant: \"outlined\",\n                placeholder: \"Enter part number or description...\",\n                value: searchQuery,\n                onChange: e => setSearchQuery(e.target.value),\n                onKeyPress: handleKeyPress,\n                disabled: loading,\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                      color: \"action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 45\n                  }, this),\n                  endAdornment: searchQuery && /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: clearSearch,\n                      edge: \"end\",\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 45\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSearch,\n            disabled: loading || !searchQuery,\n            startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 83\n            }, this),\n            sx: {\n              mt: 2\n            },\n            fullWidth: true,\n            children: loading ? 'Searching...' : 'Search Parts'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: error.startsWith('⏳') ? 'info' : 'error',\n            sx: {\n              mt: 2,\n              whiteSpace: 'pre-line'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"Search Results (\", searchResults.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: searchResults.map((part, index) => {\n                const stockStatus = getStockStatus(part.quantity);\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'start'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            flex: 1\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h6\",\n                            children: part.partNumber\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 362,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"text.secondary\",\n                            gutterBottom: true,\n                            children: part.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 365,\n                            columnNumber: 65\n                          }, this), part.modelNumber && /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"caption\",\n                            color: \"text.secondary\",\n                            children: [\"From model: \", part.modelNumber]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 369,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              display: 'flex',\n                              gap: 1,\n                              mt: 1,\n                              flexWrap: 'wrap'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Chip, {\n                              icon: /*#__PURE__*/_jsxDEV(MoneyIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 375,\n                                columnNumber: 79\n                              }, this),\n                              label: formatPrice(part.price),\n                              color: \"primary\",\n                              size: \"small\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 374,\n                              columnNumber: 69\n                            }, this), part.listPrice > part.price && /*#__PURE__*/_jsxDEV(Chip, {\n                              label: `List: ${formatPrice(part.listPrice)}`,\n                              size: \"small\",\n                              sx: {\n                                textDecoration: 'line-through'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 381,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                              icon: /*#__PURE__*/_jsxDEV(InventoryIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 388,\n                                columnNumber: 79\n                              }, this),\n                              label: stockStatus.label,\n                              color: stockStatus.color,\n                              size: \"small\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 387,\n                              columnNumber: 69\n                            }, this), part.matchedOn && /*#__PURE__*/_jsxDEV(Chip, {\n                              label: `Matched: ${part.matchedOn}`,\n                              size: \"small\",\n                              variant: \"outlined\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 394,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 373,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 361,\n                          columnNumber: 61\n                        }, this), part.images && part.images.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                          component: \"img\",\n                          src: part.images[0],\n                          alt: part.partNumber,\n                          sx: {\n                            width: 80,\n                            height: 80,\n                            objectFit: 'contain',\n                            ml: 2,\n                            borderRadius: 1,\n                            border: '1px solid',\n                            borderColor: 'divider'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 49\n                  }, this)\n                }, `${part.partNumber}-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 3\n            },\n            icon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 69\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"How it works:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 33\n              }, this), \" Parts search uses the V&V IPL (Illustrated Parts List) API. As you view appliance diagrams, parts data is cached locally for faster searching. The more models you explore, the more comprehensive your search results become.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), diagrams.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            borderRadius: 2,\n            backgroundColor: 'rgba(255, 255, 255, 0.9)',\n            backdropFilter: 'blur(10px)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 33\n            }, this), \"Exploded View Diagrams\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: diagrams.map(diagram => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: diagram.sectionName,\n                  onClick: () => setSelectedDiagram(diagram),\n                  color: (selectedDiagram === null || selectedDiagram === void 0 ? void 0 : selectedDiagram.diagramId) === diagram.diagramId ? 'primary' : 'default',\n                  variant: (selectedDiagram === null || selectedDiagram === void 0 ? void 0 : selectedDiagram.diagramId) === diagram.diagramId ? 'filled' : 'outlined'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 45\n                }, this)\n              }, diagram.diagramId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this), selectedDiagram && /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              image: selectedDiagram.diagramLargeImage,\n              alt: selectedDiagram.sectionName,\n              sx: {\n                cursor: 'zoom-in',\n                maxHeight: 400,\n                objectFit: 'contain'\n              },\n              onClick: () => setZoomedImage(selectedDiagram.diagramLargeImage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: selectedDiagram.sectionName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(ZoomInIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 56\n                }, this),\n                onClick: () => setZoomedImage(selectedDiagram.diagramLargeImage),\n                children: \"Click to zoom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: !!zoomedImage,\n      onClose: () => setZoomedImage(null),\n      maxWidth: \"xl\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Diagram View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setZoomedImage(null),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: zoomedImage,\n          alt: \"Zoomed diagram\",\n          sx: {\n            width: '100%',\n            height: 'auto',\n            maxHeight: '80vh',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n};\n_s(PartsSearch, \"28cGli0v2M5+Ik+KEJ4GHTPbgpU=\");\n_c = PartsSearch;\nexport default PartsSearch;\nvar _c;\n$RefreshReg$(_c, \"PartsSearch\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Box","TextField","InputAdornment","IconButton","Paper","Typography","CircularProgress","Alert","Grid","Card","CardContent","Chip","Button","Autocomplete","Tooltip","LinearProgress","CardMedia","Dialog","DialogContent","DialogTitle","Search","SearchIcon","Clear","ClearIcon","Build","BuildIcon","AttachMoney","MoneyIcon","Inventory","InventoryIcon","Cached","CachedIcon","Info","InfoIcon","Download","DownloadIcon","Image","ImageIcon","ZoomIn","ZoomInIcon","Close","CloseIcon","MANUFACTURER_CODES","getManufacturerCode","vandvIplApi","loadSamplePartsIntoCache","partsCache","jsxDEV","_jsxDEV","PartsSearch","_s","searchQuery","setSearchQuery","selectedManufacturer","setSelectedManufacturer","loading","setLoading","error","setError","searchResults","setSearchResults","cacheStats","setCacheStats","diagrams","setDiagrams","selectedDiagram","setSelectedDiagram","zoomedImage","setZoomedImage","manufacturerOptions","Object","entries","map","code","name","label","updateCacheStats","stats","getCacheStats","handleSearch","trim","results","searchParts","length","match","err","console","handleKeyPress","event","key","clearSearch","formatPrice","price","toFixed","getStockStatus","quantity","color","loadSampleData","log","addModelIdMapping","diagramsData","getDiagrams","Error","firstDiagram","diagramId","parts","getDiagramParts","partsCount","keys","exampleParts","slice","join","alert","message","includes","sampleDiagrams","sectionName","diagramSmallImage","diagramLargeImage","showNotification","severity","sx","width","maxWidth","mx","children","container","spacing","item","xs","md","p","borderRadius","backgroundColor","backdropFilter","variant","gutterBottom","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","mb","justifyContent","fontSize","totalParts","totalModels","lastUpdated","Date","toLocaleTimeString","size","startIcon","onClick","disabled","mt","value","onChange","newValue","options","getOptionLabel","option","renderInput","params","fullWidth","placeholder","e","target","onKeyPress","InputProps","startAdornment","position","endAdornment","edge","startsWith","whiteSpace","part","index","stockStatus","flex","partNumber","description","modelNumber","flexWrap","icon","listPrice","textDecoration","matchedOn","images","component","src","alt","height","objectFit","ml","border","borderColor","diagram","image","cursor","maxHeight","open","onClose","_c","$RefreshReg$"],"sources":["/Users/anuragmishra/Documents/Development/ML_Resources/RA/src/components/PartsSearch.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport {\n    Box,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Paper,\n    Typography,\n    CircularProgress,\n    Alert,\n    Grid,\n    Card,\n    CardContent,\n    Chip,\n    Button,\n    Autocomplete,\n    Tooltip,\n    LinearProgress,\n    CardMedia,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n} from '@mui/material';\nimport {\n    Search as SearchIcon,\n    Clear as ClearIcon,\n    Build as BuildIcon,\n    AttachMoney as MoneyIcon,\n    Inventory as InventoryIcon,\n    Cached as CachedIcon,\n    Info as InfoIcon,\n    Download as DownloadIcon,\n    Image as ImageIcon,\n    ZoomIn as ZoomInIcon,\n    Close as CloseIcon,\n} from '@mui/icons-material';\nimport { MANUFACTURER_CODES, getManufacturerCode } from '../data/manufacturerCodes';\nimport vandvIplApi from '../services/vandvIplApi';\nimport { loadSamplePartsIntoCache } from '../data/samplePartsData';\nimport partsCache from '../services/partsCache';\n\nconst PartsSearch = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [selectedManufacturer, setSelectedManufacturer] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchResults, setSearchResults] = useState([]);\n    const [cacheStats, setCacheStats] = useState(null);\n    const [diagrams, setDiagrams] = useState([]);\n    const [selectedDiagram, setSelectedDiagram] = useState(null);\n    const [zoomedImage, setZoomedImage] = useState(null);\n\n    // Convert manufacturer codes to options for autocomplete\n    const manufacturerOptions = Object.entries(MANUFACTURER_CODES).map(([code, name]) => ({\n        code,\n        name,\n        label: `${name} (${code})`\n    }));\n\n    // Load cache stats on mount\n    useEffect(() => {\n        updateCacheStats();\n    }, []);\n\n    const updateCacheStats = () => {\n        const stats = vandvIplApi.getCacheStats();\n        setCacheStats(stats);\n    };\n\n    const handleSearch = useCallback(async () => {\n        if (!searchQuery.trim()) {\n            setError('Please enter a part number or description');\n            return;\n        }\n\n        setLoading(true);\n        setError(null);\n        setSearchResults([]);\n\n        try {\n            // Search using the IPL API with cache\n            const results = await vandvIplApi.searchParts(\n                searchQuery,\n                selectedManufacturer?.code || null\n            );\n\n            setSearchResults(results);\n            updateCacheStats(); // Update stats after search\n\n            if (results.length === 0) {\n                // Check if it might be a model number without modelId\n                if (searchQuery.match(/^[A-Z0-9]{6,}$/)) {\n                    setError(\n                        `\"${searchQuery}\" looks like a model number. To search for parts:\\n` +\n                        `1. First, search for this model in the \"Appliances\" tab\\n` +\n                        `2. Click \"View Diagrams\" to load its parts\\n` +\n                        `3. Then search for specific part numbers or descriptions here\\n\\n` +\n                        `Or click \"Load Sample Data\" above to try the search feature.`\n                    );\n                } else {\n                    setError(`No parts found matching \"${searchQuery}\"`);\n                }\n            }\n\n        } catch (err) {\n            console.error('Parts search error:', err);\n            setError('Failed to search parts. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    }, [searchQuery, selectedManufacturer]);\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    const clearSearch = () => {\n        setSearchQuery('');\n        setSearchResults([]);\n        setError(null);\n    };\n\n    const formatPrice = (price) => {\n        return `$${price.toFixed(2)}`;\n    };\n\n    const getStockStatus = (quantity) => {\n        if (quantity > 10) return { label: 'In Stock', color: 'success' };\n        if (quantity > 0) return { label: `Only ${quantity} left`, color: 'warning' };\n        return { label: 'Out of Stock', color: 'error' };\n    };\n\n    // Load sample data for testing\n    const loadSampleData = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            console.log('Loading sample data...');\n\n            // Show a message that this might take time\n            setError('⏳ Connecting to V&V API... This may take up to 30 seconds. Please wait...');\n\n            // First, ensure we have the model ID mapping\n            vandvIplApi.addModelIdMapping('MAV6000AWQ', '87048');\n\n            // Try to fetch diagrams first\n            console.log('Fetching diagrams for MAV6000AWQ...');\n            const diagramsData = await vandvIplApi.getDiagrams('MAV6000AWQ', '87048');\n\n            if (diagramsData.length === 0) {\n                throw new Error('No diagrams found');\n            }\n\n            console.log(`Found ${diagramsData.length} diagrams`);\n            setDiagrams(diagramsData);\n            setSelectedDiagram(diagramsData[0]);\n            setError('⏳ Loading parts data... Almost done...');\n\n            // Fetch parts for the first diagram\n            const firstDiagram = diagramsData[0];\n            console.log(`Fetching parts for diagram ${firstDiagram.diagramId}...`);\n            const parts = await vandvIplApi.getDiagramParts('MAV6000AWQ', '87048', firstDiagram.diagramId);\n\n            const partsCount = Object.keys(parts).length;\n            console.log(`Loaded ${partsCount} parts`);\n\n            updateCacheStats();\n\n            if (partsCount > 0) {\n                // Show some example parts\n                const exampleParts = Object.keys(parts).slice(0, 3).join(', ');\n                setError(null);\n                alert(`✅ Sample data loaded!\\n\\nLoaded ${partsCount} parts from MAV6000AWQ.\\n\\nTry searching for:\\n- Part numbers: ${exampleParts}\\n- Descriptions: \"seal\", \"kit\", \"basket\"`);\n            } else {\n                throw new Error('No parts found in the diagram');\n            }\n        } catch (err) {\n            console.error('Error loading from API:', err);\n\n            // Check if it's a timeout\n            if (err.code === 'ECONNABORTED' || err.message.includes('timeout')) {\n                console.log('API timeout - loading pre-fetched data instead');\n            }\n\n            // Fallback: Load pre-fetched sample data\n            console.log('Loading pre-fetched sample data as fallback...');\n            const partsCount = loadSamplePartsIntoCache(partsCache);\n            updateCacheStats();\n\n            // Add sample diagram data\n            const sampleDiagrams = [\n                {\n                    sectionName: \"01 - Base\",\n                    diagramId: 525454,\n                    diagramSmallImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036567/125/150\",\n                    diagramLargeImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036567/680/900\"\n                },\n                {\n                    sectionName: \"02 - Cabinet\",\n                    diagramId: 525456,\n                    diagramSmallImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036568/125/150\",\n                    diagramLargeImage: \"https://www.vvapplianceparts.com/diagram/2/0/00036568/680/900\"\n                }\n            ];\n            setDiagrams(sampleDiagrams);\n            setSelectedDiagram(sampleDiagrams[0]);\n\n            setError(null);\n            alert(\n                `✅ Sample data loaded (from cache)!\\n\\n` +\n                `Loaded ${partsCount} parts for MAV6000AWQ.\\n\\n` +\n                `Try searching for:\\n` +\n                `- Part numbers: 200961, W10820039, WP22003813\\n` +\n                `- Descriptions: \"seal\", \"motor\", \"spring\", \"kit\"`\n            );\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const showNotification = (message, severity) => {\n        // You can implement a snackbar here if needed\n        if (severity === 'success') {\n            console.log('✅', message);\n        } else {\n            console.log('❌', message);\n        }\n    };\n\n    return (\n        <Box sx={{ width: '100%', maxWidth: 1200, mx: 'auto' }}>\n            <Grid container spacing={3}>\n                {/* Left side - Search and Results */}\n                <Grid item xs={12} md={diagrams.length > 0 ? 7 : 12}>\n                    <Paper\n                        sx={{\n                            p: 3,\n                            borderRadius: 2,\n                            backgroundColor: 'rgba(255, 255, 255, 0.9)',\n                            backdropFilter: 'blur(10px)',\n                        }}\n                    >\n                        <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                            <BuildIcon color=\"primary\" />\n                            Search Appliance Parts\n                        </Typography>\n\n                        {/* Cache Status */}\n                        {cacheStats && (\n                            <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1, justifyContent: 'space-between' }}>\n                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                                    <CachedIcon fontSize=\"small\" color=\"action\" />\n                                    <Typography variant=\"caption\" color=\"text.secondary\">\n                                        Cache: {cacheStats.totalParts} parts from {cacheStats.totalModels} models\n                                        {cacheStats.lastUpdated && ` • Updated ${new Date(cacheStats.lastUpdated).toLocaleTimeString()}`}\n                                    </Typography>\n                                </Box>\n                                {cacheStats.totalParts === 0 && (\n                                    <Button\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        startIcon={<DownloadIcon />}\n                                        onClick={loadSampleData}\n                                        disabled={loading}\n                                    >\n                                        Load Sample Data\n                                    </Button>\n                                )}\n                            </Box>\n                        )}\n\n                        <Grid container spacing={2} sx={{ mt: 1 }}>\n                            {/* Manufacturer Selection */}\n                            <Grid item xs={12} md={4}>\n                                <Autocomplete\n                                    value={selectedManufacturer}\n                                    onChange={(event, newValue) => setSelectedManufacturer(newValue)}\n                                    options={manufacturerOptions}\n                                    getOptionLabel={(option) => option.label}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            label=\"Manufacturer (Optional)\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            placeholder=\"All manufacturers...\"\n                                        />\n                                    )}\n                                />\n                            </Grid>\n\n                            {/* Part Number Search */}\n                            <Grid item xs={12} md={8}>\n                                <TextField\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    placeholder=\"Enter part number or description...\"\n                                    value={searchQuery}\n                                    onChange={(e) => setSearchQuery(e.target.value)}\n                                    onKeyPress={handleKeyPress}\n                                    disabled={loading}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <SearchIcon color=\"action\" />\n                                            </InputAdornment>\n                                        ),\n                                        endAdornment: searchQuery && (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={clearSearch}\n                                                    edge=\"end\"\n                                                    size=\"small\"\n                                                >\n                                                    <ClearIcon />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleSearch}\n                            disabled={loading || !searchQuery}\n                            startIcon={loading ? <CircularProgress size={20} /> : <SearchIcon />}\n                            sx={{ mt: 2 }}\n                            fullWidth\n                        >\n                            {loading ? 'Searching...' : 'Search Parts'}\n                        </Button>\n\n                        {error && (\n                            <Alert\n                                severity={error.startsWith('⏳') ? 'info' : 'error'}\n                                sx={{ mt: 2, whiteSpace: 'pre-line' }}\n                            >\n                                {error}\n                            </Alert>\n                        )}\n\n                        {/* Search Results */}\n                        {searchResults.length > 0 && (\n                            <Box sx={{ mt: 3 }}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    Search Results ({searchResults.length})\n                                </Typography>\n                                <Grid container spacing={2}>\n                                    {searchResults.map((part, index) => {\n                                        const stockStatus = getStockStatus(part.quantity);\n                                        return (\n                                            <Grid item xs={12} key={`${part.partNumber}-${index}`}>\n                                                <Card>\n                                                    <CardContent>\n                                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\n                                                            <Box sx={{ flex: 1 }}>\n                                                                <Typography variant=\"h6\">\n                                                                    {part.partNumber}\n                                                                </Typography>\n                                                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                                                    {part.description}\n                                                                </Typography>\n                                                                {part.modelNumber && (\n                                                                    <Typography variant=\"caption\" color=\"text.secondary\">\n                                                                        From model: {part.modelNumber}\n                                                                    </Typography>\n                                                                )}\n                                                                <Box sx={{ display: 'flex', gap: 1, mt: 1, flexWrap: 'wrap' }}>\n                                                                    <Chip\n                                                                        icon={<MoneyIcon />}\n                                                                        label={formatPrice(part.price)}\n                                                                        color=\"primary\"\n                                                                        size=\"small\"\n                                                                    />\n                                                                    {part.listPrice > part.price && (\n                                                                        <Chip\n                                                                            label={`List: ${formatPrice(part.listPrice)}`}\n                                                                            size=\"small\"\n                                                                            sx={{ textDecoration: 'line-through' }}\n                                                                        />\n                                                                    )}\n                                                                    <Chip\n                                                                        icon={<InventoryIcon />}\n                                                                        label={stockStatus.label}\n                                                                        color={stockStatus.color}\n                                                                        size=\"small\"\n                                                                    />\n                                                                    {part.matchedOn && (\n                                                                        <Chip\n                                                                            label={`Matched: ${part.matchedOn}`}\n                                                                            size=\"small\"\n                                                                            variant=\"outlined\"\n                                                                        />\n                                                                    )}\n                                                                </Box>\n                                                            </Box>\n                                                            {part.images && part.images.length > 0 && (\n                                                                <Box\n                                                                    component=\"img\"\n                                                                    src={part.images[0]}\n                                                                    alt={part.partNumber}\n                                                                    sx={{\n                                                                        width: 80,\n                                                                        height: 80,\n                                                                        objectFit: 'contain',\n                                                                        ml: 2,\n                                                                        borderRadius: 1,\n                                                                        border: '1px solid',\n                                                                        borderColor: 'divider',\n                                                                    }}\n                                                                />\n                                                            )}\n                                                        </Box>\n                                                    </CardContent>\n                                                </Card>\n                                            </Grid>\n                                        );\n                                    })}\n                                </Grid>\n                            </Box>\n                        )}\n\n                        {/* Info about how it works */}\n                        <Alert severity=\"info\" sx={{ mt: 3 }} icon={<InfoIcon />}>\n                            <Typography variant=\"body2\">\n                                <strong>How it works:</strong> Parts search uses the V&V IPL (Illustrated Parts List) API.\n                                As you view appliance diagrams, parts data is cached locally for faster searching.\n                                The more models you explore, the more comprehensive your search results become.\n                            </Typography>\n                        </Alert>\n                    </Paper>\n                </Grid>\n\n                {/* Right side - Diagrams */}\n                {diagrams.length > 0 && (\n                    <Grid item xs={12} md={5}>\n                        <Paper\n                            sx={{\n                                p: 3,\n                                borderRadius: 2,\n                                backgroundColor: 'rgba(255, 255, 255, 0.9)',\n                                backdropFilter: 'blur(10px)',\n                            }}\n                        >\n                            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                                <ImageIcon color=\"primary\" />\n                                Exploded View Diagrams\n                            </Typography>\n\n                            {/* Diagram Selection */}\n                            <Box sx={{ mb: 2 }}>\n                                <Grid container spacing={1}>\n                                    {diagrams.map((diagram) => (\n                                        <Grid item key={diagram.diagramId}>\n                                            <Chip\n                                                label={diagram.sectionName}\n                                                onClick={() => setSelectedDiagram(diagram)}\n                                                color={selectedDiagram?.diagramId === diagram.diagramId ? 'primary' : 'default'}\n                                                variant={selectedDiagram?.diagramId === diagram.diagramId ? 'filled' : 'outlined'}\n                                            />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </Box>\n\n                            {/* Selected Diagram */}\n                            {selectedDiagram && (\n                                <Card>\n                                    <CardMedia\n                                        component=\"img\"\n                                        image={selectedDiagram.diagramLargeImage}\n                                        alt={selectedDiagram.sectionName}\n                                        sx={{\n                                            cursor: 'zoom-in',\n                                            maxHeight: 400,\n                                            objectFit: 'contain',\n                                        }}\n                                        onClick={() => setZoomedImage(selectedDiagram.diagramLargeImage)}\n                                    />\n                                    <CardContent>\n                                        <Typography variant=\"subtitle1\" gutterBottom>\n                                            {selectedDiagram.sectionName}\n                                        </Typography>\n                                        <Button\n                                            size=\"small\"\n                                            startIcon={<ZoomInIcon />}\n                                            onClick={() => setZoomedImage(selectedDiagram.diagramLargeImage)}\n                                        >\n                                            Click to zoom\n                                        </Button>\n                                    </CardContent>\n                                </Card>\n                            )}\n                        </Paper>\n                    </Grid>\n                )}\n            </Grid>\n\n            {/* Zoomed Image Dialog */}\n            <Dialog\n                open={!!zoomedImage}\n                onClose={() => setZoomedImage(null)}\n                maxWidth=\"xl\"\n                fullWidth\n            >\n                <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Typography variant=\"h6\">Diagram View</Typography>\n                    <IconButton onClick={() => setZoomedImage(null)}>\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent sx={{ p: 0 }}>\n                    <Box\n                        component=\"img\"\n                        src={zoomedImage}\n                        alt=\"Zoomed diagram\"\n                        sx={{\n                            width: '100%',\n                            height: 'auto',\n                            maxHeight: '80vh',\n                            objectFit: 'contain',\n                        }}\n                    />\n                </DialogContent>\n            </Dialog>\n        </Box>\n    );\n};\n\nexport default PartsSearch; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}