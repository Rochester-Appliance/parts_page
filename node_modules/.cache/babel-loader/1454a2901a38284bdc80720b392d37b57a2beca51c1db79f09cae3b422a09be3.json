{"ast":null,"code":"// Known V&V Model ID Mappings\n// These are model numbers we've discovered the V&V model IDs for\n// This helps bootstrap the parts search functionality\n\nexport const KNOWN_MODEL_MAPPINGS = {\n  // Maytag Washers\n  'MAV6000AWQ': '87048',\n  'MAV6000AWW': '87048',\n  'MAV6000AWB': '87048',\n  'MAV6000AGW': '87048',\n  'MAV7000AWW': '87048',\n  'MAV7000AWQ': '87048',\n  'MAV8000AWW': '87048',\n  'MAV5000AWW': '87048',\n  'MAV5000AWQ': '87048',\n  'MAV4000AWW': '87048',\n  // Whirlpool models\n  'WTW5000DW': '10001',\n  'WTW4816FW': '10001',\n  'WRF555SDFZ': '10001'\n\n  // Add more mappings as we discover them\n  // Format: 'MODEL_NUMBER': 'V&V_MODEL_ID'\n};\n\n// Function to initialize the cache with known mappings\nexport const initializeModelMappings = vandvIplApi => {\n  let count = 0;\n  Object.entries(KNOWN_MODEL_MAPPINGS).forEach(([modelNumber, modelId]) => {\n    vandvIplApi.addModelIdMapping(modelNumber, modelId);\n    count++;\n  });\n  console.log(`✅ Initialized ${count} model ID mappings`);\n  return count;\n};\n\n// Model ID mappings for V&V API\n// These mappings were discovered by testing the V&V API\nexport const modelIdMappings = {\n  // Maytag washers - all use ID 87048\n  'MAV6000AWQ': '87048',\n  'MAV6000AWW': '87048',\n  'MAV6000AWB': '87048',\n  'MAV6000AGW': '87048',\n  'MAV7000AWW': '87048',\n  'MAV7000AWQ': '87048',\n  'MAV8000AWW': '87048',\n  'MAV5000AWW': '87048',\n  'MAV5000AWQ': '87048',\n  'MAV4000AWW': '87048',\n  // Whirlpool models - all use ID 10001\n  'WTW5000DW': '10001',\n  'WTW4816FW': '10001',\n  'WRF555SDFZ': '10001'\n};\n\n// Helper function to get model ID\nexport const getModelId = modelNumber => {\n  return modelIdMappings[modelNumber] || null;\n};","map":{"version":3,"names":["KNOWN_MODEL_MAPPINGS","initializeModelMappings","vandvIplApi","count","Object","entries","forEach","modelNumber","modelId","addModelIdMapping","console","log","modelIdMappings","getModelId"],"sources":["/Users/anuragmishra/Documents/Development/ML_Resources/RA/src/data/modelIdMappings.js"],"sourcesContent":["// Known V&V Model ID Mappings\n// These are model numbers we've discovered the V&V model IDs for\n// This helps bootstrap the parts search functionality\n\nexport const KNOWN_MODEL_MAPPINGS = {\n    // Maytag Washers\n    'MAV6000AWQ': '87048',\n    'MAV6000AWW': '87048',\n    'MAV6000AWB': '87048',\n    'MAV6000AGW': '87048',\n    'MAV7000AWW': '87048',\n    'MAV7000AWQ': '87048',\n    'MAV8000AWW': '87048',\n    'MAV5000AWW': '87048',\n    'MAV5000AWQ': '87048',\n    'MAV4000AWW': '87048',\n\n    // Whirlpool models\n    'WTW5000DW': '10001',\n    'WTW4816FW': '10001',\n    'WRF555SDFZ': '10001',\n\n    // Add more mappings as we discover them\n    // Format: 'MODEL_NUMBER': 'V&V_MODEL_ID'\n};\n\n// Function to initialize the cache with known mappings\nexport const initializeModelMappings = (vandvIplApi) => {\n    let count = 0;\n\n    Object.entries(KNOWN_MODEL_MAPPINGS).forEach(([modelNumber, modelId]) => {\n        vandvIplApi.addModelIdMapping(modelNumber, modelId);\n        count++;\n    });\n\n    console.log(`✅ Initialized ${count} model ID mappings`);\n    return count;\n};\n\n// Model ID mappings for V&V API\n// These mappings were discovered by testing the V&V API\nexport const modelIdMappings = {\n    // Maytag washers - all use ID 87048\n    'MAV6000AWQ': '87048',\n    'MAV6000AWW': '87048',\n    'MAV6000AWB': '87048',\n    'MAV6000AGW': '87048',\n    'MAV7000AWW': '87048',\n    'MAV7000AWQ': '87048',\n    'MAV8000AWW': '87048',\n    'MAV5000AWW': '87048',\n    'MAV5000AWQ': '87048',\n    'MAV4000AWW': '87048',\n\n    // Whirlpool models - all use ID 10001\n    'WTW5000DW': '10001',\n    'WTW4816FW': '10001',\n    'WRF555SDFZ': '10001'\n};\n\n// Helper function to get model ID\nexport const getModelId = (modelNumber) => {\n    return modelIdMappings[modelNumber] || null;\n}; "],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,MAAMA,oBAAoB,GAAG;EAChC;EACA,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EAErB;EACA,WAAW,EAAE,OAAO;EACpB,WAAW,EAAE,OAAO;EACpB,YAAY,EAAE;;EAEd;EACA;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,uBAAuB,GAAIC,WAAW,IAAK;EACpD,IAAIC,KAAK,GAAG,CAAC;EAEbC,MAAM,CAACC,OAAO,CAACL,oBAAoB,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,WAAW,EAAEC,OAAO,CAAC,KAAK;IACrEN,WAAW,CAACO,iBAAiB,CAACF,WAAW,EAAEC,OAAO,CAAC;IACnDL,KAAK,EAAE;EACX,CAAC,CAAC;EAEFO,OAAO,CAACC,GAAG,CAAC,iBAAiBR,KAAK,oBAAoB,CAAC;EACvD,OAAOA,KAAK;AAChB,CAAC;;AAED;AACA;AACA,OAAO,MAAMS,eAAe,GAAG;EAC3B;EACA,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EACrB,YAAY,EAAE,OAAO;EAErB;EACA,WAAW,EAAE,OAAO;EACpB,WAAW,EAAE,OAAO;EACpB,YAAY,EAAE;AAClB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAIN,WAAW,IAAK;EACvC,OAAOK,eAAe,CAACL,WAAW,CAAC,IAAI,IAAI;AAC/C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}