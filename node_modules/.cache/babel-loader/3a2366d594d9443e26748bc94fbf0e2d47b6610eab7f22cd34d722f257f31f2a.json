{"ast":null,"code":"var _jsxFileName = \"/Users/anuragmishra/Documents/Development/ML_Resources/RA/src/components/PartsSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Box, TextField, InputAdornment, IconButton, Paper, Typography, CircularProgress, Alert, Grid, Card, CardContent, Chip, Button, Autocomplete, Tooltip, LinearProgress } from '@mui/material';\nimport { Search as SearchIcon, Clear as ClearIcon, Build as BuildIcon, AttachMoney as MoneyIcon, Inventory as InventoryIcon, Cached as CachedIcon, Info as InfoIcon, Download as DownloadIcon } from '@mui/icons-material';\nimport { MANUFACTURER_CODES, getManufacturerCode } from '../data/manufacturerCodes';\nimport vandvIplApi from '../services/vandvIplApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PartsSearch = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedManufacturer, setSelectedManufacturer] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [cacheStats, setCacheStats] = useState(null);\n\n  // Convert manufacturer codes to options for autocomplete\n  const manufacturerOptions = Object.entries(MANUFACTURER_CODES).map(([code, name]) => ({\n    code,\n    name,\n    label: `${name} (${code})`\n  }));\n\n  // Load cache stats on mount\n  useEffect(() => {\n    updateCacheStats();\n  }, []);\n  const updateCacheStats = () => {\n    const stats = vandvIplApi.getCacheStats();\n    setCacheStats(stats);\n  };\n  const handleSearch = useCallback(async () => {\n    if (!searchQuery.trim()) {\n      setError('Please enter a part number or description');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setSearchResults([]);\n    try {\n      // Search using the IPL API with cache\n      const results = await vandvIplApi.searchParts(searchQuery, (selectedManufacturer === null || selectedManufacturer === void 0 ? void 0 : selectedManufacturer.code) || null);\n      setSearchResults(results);\n      updateCacheStats(); // Update stats after search\n\n      if (results.length === 0) {\n        // Check if it might be a model number without modelId\n        if (searchQuery.match(/^[A-Z0-9]{6,}$/)) {\n          setError(`\"${searchQuery}\" looks like a model number. To search for parts:\\n` + `1. First, search for this model in the \"Appliances\" tab\\n` + `2. Click \"View Diagrams\" to load its parts\\n` + `3. Then search for specific part numbers or descriptions here\\n\\n` + `Or click \"Load Sample Data\" above to try the search feature.`);\n        } else {\n          setError(`No parts found matching \"${searchQuery}\"`);\n        }\n      }\n    } catch (err) {\n      console.error('Parts search error:', err);\n      setError('Failed to search parts. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [searchQuery, selectedManufacturer]);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const clearSearch = () => {\n    setSearchQuery('');\n    setSearchResults([]);\n    setError(null);\n  };\n  const formatPrice = price => {\n    return `$${price.toFixed(2)}`;\n  };\n  const getStockStatus = quantity => {\n    if (quantity > 10) return {\n      label: 'In Stock',\n      color: 'success'\n    };\n    if (quantity > 0) return {\n      label: `Only ${quantity} left`,\n      color: 'warning'\n    };\n    return {\n      label: 'Out of Stock',\n      color: 'error'\n    };\n  };\n\n  // Load sample data for testing\n  const loadSampleData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Loading sample data...');\n\n      // First, ensure we have the model ID mapping\n      vandvIplApi.addModelIdMapping('MAV6000AWQ', '87048');\n\n      // Try to fetch diagrams first\n      console.log('Fetching diagrams for MAV6000AWQ...');\n      const diagrams = await vandvIplApi.getDiagrams('MAV6000AWQ', '87048');\n      if (diagrams.length === 0) {\n        setError('No diagrams found. The V&V API might be down.');\n        return;\n      }\n      console.log(`Found ${diagrams.length} diagrams`);\n\n      // Fetch parts for the first diagram\n      const firstDiagram = diagrams[0];\n      console.log(`Fetching parts for diagram ${firstDiagram.diagramId}...`);\n      const parts = await vandvIplApi.getDiagramParts('MAV6000AWQ', '87048', firstDiagram.diagramId);\n      const partsCount = Object.keys(parts).length;\n      console.log(`Loaded ${partsCount} parts`);\n      updateCacheStats();\n      if (partsCount > 0) {\n        // Show some example parts\n        const exampleParts = Object.keys(parts).slice(0, 3).join(', ');\n        setError(null);\n        alert(`✅ Sample data loaded!\\n\\nLoaded ${partsCount} parts from MAV6000AWQ.\\n\\nTry searching for:\\n- Part numbers: ${exampleParts}\\n- Descriptions: \"seal\", \"kit\", \"basket\"`);\n      } else {\n        setError('No parts found in the diagram.');\n      }\n    } catch (err) {\n      console.error('Error loading sample data:', err);\n      setError(`Failed to load sample data: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const showNotification = (message, severity) => {\n    // You can implement a snackbar here if needed\n    if (severity === 'success') {\n      console.log('✅', message);\n    } else {\n      console.log('❌', message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 800,\n      mx: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        borderRadius: 2,\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        backdropFilter: 'blur(10px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(BuildIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), \"Search Appliance Parts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), cacheStats && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(CachedIcon, {\n            fontSize: \"small\",\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: [\"Cache: \", cacheStats.totalParts, \" parts from \", cacheStats.totalModels, \" models\", cacheStats.lastUpdated && ` • Updated ${new Date(cacheStats.lastUpdated).toLocaleTimeString()}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), cacheStats.totalParts === 0 && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 44\n          }, this),\n          onClick: loadSampleData,\n          disabled: loading,\n          children: \"Load Sample Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            value: selectedManufacturer,\n            onChange: (event, newValue) => setSelectedManufacturer(newValue),\n            options: manufacturerOptions,\n            getOptionLabel: option => option.label,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Manufacturer (Optional)\",\n              variant: \"outlined\",\n              fullWidth: true,\n              placeholder: \"All manufacturers...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Enter part number or description...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            onKeyPress: handleKeyPress,\n            disabled: loading,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  color: \"action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this),\n              endAdornment: searchQuery && /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: clearSearch,\n                  edge: \"end\",\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSearch,\n        disabled: loading || !searchQuery,\n        startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 75\n        }, this),\n        sx: {\n          mt: 2\n        },\n        fullWidth: true,\n        children: loading ? 'Searching...' : 'Search Parts'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 2,\n          whiteSpace: 'pre-line'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Search Results (\", searchResults.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: searchResults.map((part, index) => {\n            const stockStatus = getStockStatus(part.quantity);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'start'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        flex: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        children: part.partNumber\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"text.secondary\",\n                        gutterBottom: true,\n                        children: part.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 57\n                      }, this), part.modelNumber && /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        children: [\"From model: \", part.modelNumber]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          gap: 1,\n                          mt: 1,\n                          flexWrap: 'wrap'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Chip, {\n                          icon: /*#__PURE__*/_jsxDEV(MoneyIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 316,\n                            columnNumber: 71\n                          }, this),\n                          label: formatPrice(part.price),\n                          color: \"primary\",\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 315,\n                          columnNumber: 61\n                        }, this), part.listPrice > part.price && /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `List: ${formatPrice(part.listPrice)}`,\n                          size: \"small\",\n                          sx: {\n                            textDecoration: 'line-through'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 322,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                          icon: /*#__PURE__*/_jsxDEV(InventoryIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 329,\n                            columnNumber: 71\n                          }, this),\n                          label: stockStatus.label,\n                          color: stockStatus.color,\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 61\n                        }, this), part.matchedOn && /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `Matched: ${part.matchedOn}`,\n                          size: \"small\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 53\n                    }, this), part.images && part.images.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                      component: \"img\",\n                      src: part.images[0],\n                      alt: part.partNumber,\n                      sx: {\n                        width: 80,\n                        height: 80,\n                        objectFit: 'contain',\n                        ml: 2,\n                        borderRadius: 1,\n                        border: '1px solid',\n                        borderColor: 'divider'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 41\n              }, this)\n            }, `${part.partNumber}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mt: 3\n        },\n        icon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 61\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"How it works:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), \" Parts search uses the V&V IPL (Illustrated Parts List) API. As you view appliance diagrams, parts data is cached locally for faster searching. The more models you explore, the more comprehensive your search results become.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n_s(PartsSearch, \"h1a51S6aZNkBn2P+sQUHexuQkyE=\");\n_c = PartsSearch;\nexport default PartsSearch;\nvar _c;\n$RefreshReg$(_c, \"PartsSearch\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Box","TextField","InputAdornment","IconButton","Paper","Typography","CircularProgress","Alert","Grid","Card","CardContent","Chip","Button","Autocomplete","Tooltip","LinearProgress","Search","SearchIcon","Clear","ClearIcon","Build","BuildIcon","AttachMoney","MoneyIcon","Inventory","InventoryIcon","Cached","CachedIcon","Info","InfoIcon","Download","DownloadIcon","MANUFACTURER_CODES","getManufacturerCode","vandvIplApi","jsxDEV","_jsxDEV","PartsSearch","_s","searchQuery","setSearchQuery","selectedManufacturer","setSelectedManufacturer","loading","setLoading","error","setError","searchResults","setSearchResults","cacheStats","setCacheStats","manufacturerOptions","Object","entries","map","code","name","label","updateCacheStats","stats","getCacheStats","handleSearch","trim","results","searchParts","length","match","err","console","handleKeyPress","event","key","clearSearch","formatPrice","price","toFixed","getStockStatus","quantity","color","loadSampleData","log","addModelIdMapping","diagrams","getDiagrams","firstDiagram","diagramId","parts","getDiagramParts","partsCount","keys","exampleParts","slice","join","alert","message","showNotification","severity","sx","width","maxWidth","mx","children","p","borderRadius","backgroundColor","backdropFilter","variant","gutterBottom","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","mb","justifyContent","fontSize","totalParts","totalModels","lastUpdated","Date","toLocaleTimeString","size","startIcon","onClick","disabled","container","spacing","mt","item","xs","md","value","onChange","newValue","options","getOptionLabel","option","renderInput","params","fullWidth","placeholder","e","target","onKeyPress","InputProps","startAdornment","position","endAdornment","edge","whiteSpace","part","index","stockStatus","flex","partNumber","description","modelNumber","flexWrap","icon","listPrice","textDecoration","matchedOn","images","component","src","alt","height","objectFit","ml","border","borderColor","_c","$RefreshReg$"],"sources":["/Users/anuragmishra/Documents/Development/ML_Resources/RA/src/components/PartsSearch.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport {\n    Box,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Paper,\n    Typography,\n    CircularProgress,\n    Alert,\n    Grid,\n    Card,\n    CardContent,\n    Chip,\n    Button,\n    Autocomplete,\n    Tooltip,\n    LinearProgress,\n} from '@mui/material';\nimport {\n    Search as SearchIcon,\n    Clear as ClearIcon,\n    Build as BuildIcon,\n    AttachMoney as MoneyIcon,\n    Inventory as InventoryIcon,\n    Cached as CachedIcon,\n    Info as InfoIcon,\n    Download as DownloadIcon,\n} from '@mui/icons-material';\nimport { MANUFACTURER_CODES, getManufacturerCode } from '../data/manufacturerCodes';\nimport vandvIplApi from '../services/vandvIplApi';\n\nconst PartsSearch = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [selectedManufacturer, setSelectedManufacturer] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchResults, setSearchResults] = useState([]);\n    const [cacheStats, setCacheStats] = useState(null);\n\n    // Convert manufacturer codes to options for autocomplete\n    const manufacturerOptions = Object.entries(MANUFACTURER_CODES).map(([code, name]) => ({\n        code,\n        name,\n        label: `${name} (${code})`\n    }));\n\n    // Load cache stats on mount\n    useEffect(() => {\n        updateCacheStats();\n    }, []);\n\n    const updateCacheStats = () => {\n        const stats = vandvIplApi.getCacheStats();\n        setCacheStats(stats);\n    };\n\n    const handleSearch = useCallback(async () => {\n        if (!searchQuery.trim()) {\n            setError('Please enter a part number or description');\n            return;\n        }\n\n        setLoading(true);\n        setError(null);\n        setSearchResults([]);\n\n        try {\n            // Search using the IPL API with cache\n            const results = await vandvIplApi.searchParts(\n                searchQuery,\n                selectedManufacturer?.code || null\n            );\n\n            setSearchResults(results);\n            updateCacheStats(); // Update stats after search\n\n            if (results.length === 0) {\n                // Check if it might be a model number without modelId\n                if (searchQuery.match(/^[A-Z0-9]{6,}$/)) {\n                    setError(\n                        `\"${searchQuery}\" looks like a model number. To search for parts:\\n` +\n                        `1. First, search for this model in the \"Appliances\" tab\\n` +\n                        `2. Click \"View Diagrams\" to load its parts\\n` +\n                        `3. Then search for specific part numbers or descriptions here\\n\\n` +\n                        `Or click \"Load Sample Data\" above to try the search feature.`\n                    );\n                } else {\n                    setError(`No parts found matching \"${searchQuery}\"`);\n                }\n            }\n\n        } catch (err) {\n            console.error('Parts search error:', err);\n            setError('Failed to search parts. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    }, [searchQuery, selectedManufacturer]);\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    const clearSearch = () => {\n        setSearchQuery('');\n        setSearchResults([]);\n        setError(null);\n    };\n\n    const formatPrice = (price) => {\n        return `$${price.toFixed(2)}`;\n    };\n\n    const getStockStatus = (quantity) => {\n        if (quantity > 10) return { label: 'In Stock', color: 'success' };\n        if (quantity > 0) return { label: `Only ${quantity} left`, color: 'warning' };\n        return { label: 'Out of Stock', color: 'error' };\n    };\n\n    // Load sample data for testing\n    const loadSampleData = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            console.log('Loading sample data...');\n\n            // First, ensure we have the model ID mapping\n            vandvIplApi.addModelIdMapping('MAV6000AWQ', '87048');\n\n            // Try to fetch diagrams first\n            console.log('Fetching diagrams for MAV6000AWQ...');\n            const diagrams = await vandvIplApi.getDiagrams('MAV6000AWQ', '87048');\n\n            if (diagrams.length === 0) {\n                setError('No diagrams found. The V&V API might be down.');\n                return;\n            }\n\n            console.log(`Found ${diagrams.length} diagrams`);\n\n            // Fetch parts for the first diagram\n            const firstDiagram = diagrams[0];\n            console.log(`Fetching parts for diagram ${firstDiagram.diagramId}...`);\n            const parts = await vandvIplApi.getDiagramParts('MAV6000AWQ', '87048', firstDiagram.diagramId);\n\n            const partsCount = Object.keys(parts).length;\n            console.log(`Loaded ${partsCount} parts`);\n\n            updateCacheStats();\n\n            if (partsCount > 0) {\n                // Show some example parts\n                const exampleParts = Object.keys(parts).slice(0, 3).join(', ');\n                setError(null);\n                alert(`✅ Sample data loaded!\\n\\nLoaded ${partsCount} parts from MAV6000AWQ.\\n\\nTry searching for:\\n- Part numbers: ${exampleParts}\\n- Descriptions: \"seal\", \"kit\", \"basket\"`);\n            } else {\n                setError('No parts found in the diagram.');\n            }\n        } catch (err) {\n            console.error('Error loading sample data:', err);\n            setError(`Failed to load sample data: ${err.message}`);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const showNotification = (message, severity) => {\n        // You can implement a snackbar here if needed\n        if (severity === 'success') {\n            console.log('✅', message);\n        } else {\n            console.log('❌', message);\n        }\n    };\n\n    return (\n        <Box sx={{ width: '100%', maxWidth: 800, mx: 'auto' }}>\n            <Paper\n                sx={{\n                    p: 3,\n                    borderRadius: 2,\n                    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n                    backdropFilter: 'blur(10px)',\n                }}\n            >\n                <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <BuildIcon color=\"primary\" />\n                    Search Appliance Parts\n                </Typography>\n\n                {/* Cache Status */}\n                {cacheStats && (\n                    <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1, justifyContent: 'space-between' }}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                            <CachedIcon fontSize=\"small\" color=\"action\" />\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                                Cache: {cacheStats.totalParts} parts from {cacheStats.totalModels} models\n                                {cacheStats.lastUpdated && ` • Updated ${new Date(cacheStats.lastUpdated).toLocaleTimeString()}`}\n                            </Typography>\n                        </Box>\n                        {cacheStats.totalParts === 0 && (\n                            <Button\n                                size=\"small\"\n                                variant=\"outlined\"\n                                startIcon={<DownloadIcon />}\n                                onClick={loadSampleData}\n                                disabled={loading}\n                            >\n                                Load Sample Data\n                            </Button>\n                        )}\n                    </Box>\n                )}\n\n                <Grid container spacing={2} sx={{ mt: 1 }}>\n                    {/* Manufacturer Selection */}\n                    <Grid item xs={12} md={4}>\n                        <Autocomplete\n                            value={selectedManufacturer}\n                            onChange={(event, newValue) => setSelectedManufacturer(newValue)}\n                            options={manufacturerOptions}\n                            getOptionLabel={(option) => option.label}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=\"Manufacturer (Optional)\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"All manufacturers...\"\n                                />\n                            )}\n                        />\n                    </Grid>\n\n                    {/* Part Number Search */}\n                    <Grid item xs={12} md={8}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            placeholder=\"Enter part number or description...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                            onKeyPress={handleKeyPress}\n                            disabled={loading}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon color=\"action\" />\n                                    </InputAdornment>\n                                ),\n                                endAdornment: searchQuery && (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            onClick={clearSearch}\n                                            edge=\"end\"\n                                            size=\"small\"\n                                        >\n                                            <ClearIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSearch}\n                    disabled={loading || !searchQuery}\n                    startIcon={loading ? <CircularProgress size={20} /> : <SearchIcon />}\n                    sx={{ mt: 2 }}\n                    fullWidth\n                >\n                    {loading ? 'Searching...' : 'Search Parts'}\n                </Button>\n\n                {error && (\n                    <Alert severity=\"error\" sx={{ mt: 2, whiteSpace: 'pre-line' }}>\n                        {error}\n                    </Alert>\n                )}\n\n                {/* Search Results */}\n                {searchResults.length > 0 && (\n                    <Box sx={{ mt: 3 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Search Results ({searchResults.length})\n                        </Typography>\n                        <Grid container spacing={2}>\n                            {searchResults.map((part, index) => {\n                                const stockStatus = getStockStatus(part.quantity);\n                                return (\n                                    <Grid item xs={12} key={`${part.partNumber}-${index}`}>\n                                        <Card>\n                                            <CardContent>\n                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\n                                                    <Box sx={{ flex: 1 }}>\n                                                        <Typography variant=\"h6\">\n                                                            {part.partNumber}\n                                                        </Typography>\n                                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                                            {part.description}\n                                                        </Typography>\n                                                        {part.modelNumber && (\n                                                            <Typography variant=\"caption\" color=\"text.secondary\">\n                                                                From model: {part.modelNumber}\n                                                            </Typography>\n                                                        )}\n                                                        <Box sx={{ display: 'flex', gap: 1, mt: 1, flexWrap: 'wrap' }}>\n                                                            <Chip\n                                                                icon={<MoneyIcon />}\n                                                                label={formatPrice(part.price)}\n                                                                color=\"primary\"\n                                                                size=\"small\"\n                                                            />\n                                                            {part.listPrice > part.price && (\n                                                                <Chip\n                                                                    label={`List: ${formatPrice(part.listPrice)}`}\n                                                                    size=\"small\"\n                                                                    sx={{ textDecoration: 'line-through' }}\n                                                                />\n                                                            )}\n                                                            <Chip\n                                                                icon={<InventoryIcon />}\n                                                                label={stockStatus.label}\n                                                                color={stockStatus.color}\n                                                                size=\"small\"\n                                                            />\n                                                            {part.matchedOn && (\n                                                                <Chip\n                                                                    label={`Matched: ${part.matchedOn}`}\n                                                                    size=\"small\"\n                                                                    variant=\"outlined\"\n                                                                />\n                                                            )}\n                                                        </Box>\n                                                    </Box>\n                                                    {part.images && part.images.length > 0 && (\n                                                        <Box\n                                                            component=\"img\"\n                                                            src={part.images[0]}\n                                                            alt={part.partNumber}\n                                                            sx={{\n                                                                width: 80,\n                                                                height: 80,\n                                                                objectFit: 'contain',\n                                                                ml: 2,\n                                                                borderRadius: 1,\n                                                                border: '1px solid',\n                                                                borderColor: 'divider',\n                                                            }}\n                                                        />\n                                                    )}\n                                                </Box>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                );\n                            })}\n                        </Grid>\n                    </Box>\n                )}\n\n                {/* Info about how it works */}\n                <Alert severity=\"info\" sx={{ mt: 3 }} icon={<InfoIcon />}>\n                    <Typography variant=\"body2\">\n                        <strong>How it works:</strong> Parts search uses the V&V IPL (Illustrated Parts List) API.\n                        As you view appliance diagrams, parts data is cached locally for faster searching.\n                        The more models you explore, the more comprehensive your search results become.\n                    </Typography>\n                </Alert>\n            </Paper>\n        </Box>\n    );\n};\n\nexport default PartsSearch; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}